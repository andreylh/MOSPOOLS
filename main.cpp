// ===================================
// Main.cpp file generated by OptFrame
// Project EFP
// ===================================
#include <stdlib.h>
#include <math.h>
#include <iostream>
#include "./cplexMOPoolSearch.hpp"
#include "./readParetoSets.hpp"
#include "./OptFrame/Loader.hpp"

using namespace std;
using namespace optframe;

int main(int argc, char **argv)
{


	int nOfArguments = 4;
	if (argc != (1 + nOfArguments))
	{
		cout << "Parametros incorretos!" << endl;
		cout << "Os parametros esperados sao: \n"
				"1 - instancia \n"
				"2 - MIP START\n"
				"3 - NInterval\n"
				"4 - time limit\n" << endl;
		exit(1);
	}
	const char* instancia = argv[1];
	bool mipStart = atoi(argv[2]);
	int nIntervalsCoef = atoi(argv[3]);
	int tLim = atoi(argv[4]);
	string filename = instancia;
	cout << "filename = " << filename << endl;
	cout << "mipStart = " << mipStart << endl;

	RandGenMersenneTwister rg;
	//long  1412730737
	long seed = time(NULL); //CalibrationMode
	seed = 2;
	cout << "Seed = " << seed << endl;
	srand(seed);
	rg.setSeed(seed);

	//	readParetoSets rPS;
	//	rPS.exec(filename, mipStart, nIntervalsCoef, tLim);

	//	mModel.analyzeParetoFronts("./ResultadosFronteiras/ParetoFrontInputbWCMNExec27TLim10-bestMIPStart", 68, "./ResultadosFronteiras/ParetoFrontInputbWCMNExec27TLim10", 44);
	//	getchar();
	cplexMOPoolSearch mModel(rg);
	mModel.exec(filename, mipStart, nIntervalsCoef, tLim, 4, 0);

	cout << "Ended com sucesso!" << endl;
}
